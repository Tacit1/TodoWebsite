import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./calendar-scheduler-event-actions.component";
import * as i3 from "./pipes/scheduler-event-title.pipe";
export class CalendarSchedulerEventTitleComponent {
    constructor() {
        this.showStatus = true;
        this.showContent = true;
        this.showActions = true;
    }
}
CalendarSchedulerEventTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: CalendarSchedulerEventTitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CalendarSchedulerEventTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.1.1", type: CalendarSchedulerEventTitleComponent, selector: "calendar-scheduler-event-title", inputs: { view: "view", event: "event", showStatus: "showStatus", showContent: "showContent", showActions: "showActions", customTemplate: "customTemplate" }, host: { classAttribute: "cal-scheduler-event-title-container" }, ngImport: i0, template: `
        <ng-template #defaultTemplate>
            <div
                class="cal-scheduler-event-title"
                [innerHTML]="event.title | schedulerEventTitle:view:event">
            </div>
            <calendar-scheduler-event-actions
                *ngIf="showActions && !showContent && (event.isClickable || event.isDisabled)"
                class="no-content-actions"
                [event]="event">
            </calendar-scheduler-event-actions>
            <div *ngIf="event.status && showStatus"
                class="cal-scheduler-event-status"
                [class.ok]="event.status === 'ok'"
                [class.warning]="event.status === 'warning'"
                [class.danger]="event.status === 'danger'">
            </div>
        </ng-template>
        <ng-template
            [ngTemplateOutlet]="customTemplate || defaultTemplate"
            [ngTemplateOutletContext]="{
                view: view,
                event: event,
                showStatus: showStatus,
                showContent: showContent,
                showActions: showActions
            }">
        </ng-template>
    `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i2.CalendarSchedulerEventActionsComponent, selector: "calendar-scheduler-event-actions", inputs: ["event"] }, { kind: "pipe", type: i3.SchedulerEventTitlePipe, name: "schedulerEventTitle" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: CalendarSchedulerEventTitleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'calendar-scheduler-event-title',
                    template: `
        <ng-template #defaultTemplate>
            <div
                class="cal-scheduler-event-title"
                [innerHTML]="event.title | schedulerEventTitle:view:event">
            </div>
            <calendar-scheduler-event-actions
                *ngIf="showActions && !showContent && (event.isClickable || event.isDisabled)"
                class="no-content-actions"
                [event]="event">
            </calendar-scheduler-event-actions>
            <div *ngIf="event.status && showStatus"
                class="cal-scheduler-event-status"
                [class.ok]="event.status === 'ok'"
                [class.warning]="event.status === 'warning'"
                [class.danger]="event.status === 'danger'">
            </div>
        </ng-template>
        <ng-template
            [ngTemplateOutlet]="customTemplate || defaultTemplate"
            [ngTemplateOutletContext]="{
                view: view,
                event: event,
                showStatus: showStatus,
                showContent: showContent,
                showActions: showActions
            }">
        </ng-template>
    `,
                    host: {
                        'class': 'cal-scheduler-event-title-container'
                    }
                }]
        }], propDecorators: { view: [{
                type: Input
            }], event: [{
                type: Input
            }], showStatus: [{
                type: Input
            }], showContent: [{
                type: Input
            }], showActions: [{
                type: Input
            }], customTemplate: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LXRpdGxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9tb2R1bGVzL3NjaGVkdWxlci9jYWxlbmRhci1zY2hlZHVsZXItZXZlbnQtdGl0bGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFlLE1BQU0sZUFBZSxDQUFDOzs7OztBQXdDOUQsTUFBTSxPQUFPLG9DQUFvQztJQW5DakQ7UUF5Q2EsZUFBVSxHQUFZLElBQUksQ0FBQztRQUUzQixnQkFBVyxHQUFZLElBQUksQ0FBQztRQUU1QixnQkFBVyxHQUFZLElBQUksQ0FBQztLQUd4Qzs7aUlBYlksb0NBQW9DO3FIQUFwQyxvQ0FBb0MscVNBakNuQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQTRCVDsyRkFLUSxvQ0FBb0M7a0JBbkNoRCxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxnQ0FBZ0M7b0JBQzFDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQTRCVDtvQkFDRCxJQUFJLEVBQUU7d0JBQ0YsT0FBTyxFQUFFLHFDQUFxQztxQkFDakQ7aUJBQ0o7OEJBR1ksSUFBSTtzQkFBWixLQUFLO2dCQUVHLEtBQUs7c0JBQWIsS0FBSztnQkFFRyxVQUFVO3NCQUFsQixLQUFLO2dCQUVHLFdBQVc7c0JBQW5CLEtBQUs7Z0JBRUcsV0FBVztzQkFBbkIsS0FBSztnQkFFRyxjQUFjO3NCQUF0QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICAgIENhbGVuZGFyU2NoZWR1bGVyRXZlbnRcclxufSBmcm9tICcuL21vZGVscyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnY2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LXRpdGxlJyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICAgICAgPG5nLXRlbXBsYXRlICNkZWZhdWx0VGVtcGxhdGU+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICAgIGNsYXNzPVwiY2FsLXNjaGVkdWxlci1ldmVudC10aXRsZVwiXHJcbiAgICAgICAgICAgICAgICBbaW5uZXJIVE1MXT1cImV2ZW50LnRpdGxlIHwgc2NoZWR1bGVyRXZlbnRUaXRsZTp2aWV3OmV2ZW50XCI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8Y2FsZW5kYXItc2NoZWR1bGVyLWV2ZW50LWFjdGlvbnNcclxuICAgICAgICAgICAgICAgICpuZ0lmPVwic2hvd0FjdGlvbnMgJiYgIXNob3dDb250ZW50ICYmIChldmVudC5pc0NsaWNrYWJsZSB8fCBldmVudC5pc0Rpc2FibGVkKVwiXHJcbiAgICAgICAgICAgICAgICBjbGFzcz1cIm5vLWNvbnRlbnQtYWN0aW9uc1wiXHJcbiAgICAgICAgICAgICAgICBbZXZlbnRdPVwiZXZlbnRcIj5cclxuICAgICAgICAgICAgPC9jYWxlbmRhci1zY2hlZHVsZXItZXZlbnQtYWN0aW9ucz5cclxuICAgICAgICAgICAgPGRpdiAqbmdJZj1cImV2ZW50LnN0YXR1cyAmJiBzaG93U3RhdHVzXCJcclxuICAgICAgICAgICAgICAgIGNsYXNzPVwiY2FsLXNjaGVkdWxlci1ldmVudC1zdGF0dXNcIlxyXG4gICAgICAgICAgICAgICAgW2NsYXNzLm9rXT1cImV2ZW50LnN0YXR1cyA9PT0gJ29rJ1wiXHJcbiAgICAgICAgICAgICAgICBbY2xhc3Mud2FybmluZ109XCJldmVudC5zdGF0dXMgPT09ICd3YXJuaW5nJ1wiXHJcbiAgICAgICAgICAgICAgICBbY2xhc3MuZGFuZ2VyXT1cImV2ZW50LnN0YXR1cyA9PT0gJ2RhbmdlcidcIj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cclxuICAgICAgICA8bmctdGVtcGxhdGVcclxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRdPVwiY3VzdG9tVGVtcGxhdGUgfHwgZGVmYXVsdFRlbXBsYXRlXCJcclxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntcclxuICAgICAgICAgICAgICAgIHZpZXc6IHZpZXcsXHJcbiAgICAgICAgICAgICAgICBldmVudDogZXZlbnQsXHJcbiAgICAgICAgICAgICAgICBzaG93U3RhdHVzOiBzaG93U3RhdHVzLFxyXG4gICAgICAgICAgICAgICAgc2hvd0NvbnRlbnQ6IHNob3dDb250ZW50LFxyXG4gICAgICAgICAgICAgICAgc2hvd0FjdGlvbnM6IHNob3dBY3Rpb25zXHJcbiAgICAgICAgICAgIH1cIj5cclxuICAgICAgICA8L25nLXRlbXBsYXRlPlxyXG4gICAgYCxcclxuICAgIGhvc3Q6IHtcclxuICAgICAgICAnY2xhc3MnOiAnY2FsLXNjaGVkdWxlci1ldmVudC10aXRsZS1jb250YWluZXInXHJcbiAgICB9XHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDYWxlbmRhclNjaGVkdWxlckV2ZW50VGl0bGVDb21wb25lbnQge1xyXG5cclxuICAgIEBJbnB1dCgpIHZpZXc6IHN0cmluZztcclxuXHJcbiAgICBASW5wdXQoKSBldmVudDogQ2FsZW5kYXJTY2hlZHVsZXJFdmVudDtcclxuXHJcbiAgICBASW5wdXQoKSBzaG93U3RhdHVzOiBib29sZWFuID0gdHJ1ZTtcclxuXHJcbiAgICBASW5wdXQoKSBzaG93Q29udGVudDogYm9vbGVhbiA9IHRydWU7XHJcblxyXG4gICAgQElucHV0KCkgc2hvd0FjdGlvbnM6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICAgIEBJbnB1dCgpIGN1c3RvbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG59XHJcbiJdfQ==