import { Injectable } from '@angular/core';
import { getSchedulerViewHourGrid, getSchedulerViewDays, getSchedulerView } from './calendar-scheduler-utils';
import * as i0 from "@angular/core";
import * as i1 from "angular-calendar";
export class CalendarSchedulerUtils {
    constructor(dateAdapter) {
        this.dateAdapter = dateAdapter;
    }
    getSchedulerViewHourGrid(args) {
        return getSchedulerViewHourGrid(this.dateAdapter, args);
    }
    getSchedulerViewDays(args) {
        return getSchedulerViewDays(this.dateAdapter, args);
    }
    getSchedulerView(args) {
        return getSchedulerView(this.dateAdapter, args);
    }
}
CalendarSchedulerUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: CalendarSchedulerUtils, deps: [{ token: i1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });
CalendarSchedulerUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: CalendarSchedulerUtils });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.1", ngImport: i0, type: CalendarSchedulerUtils, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.DateAdapter }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItc2NoZWR1bGVyLXV0aWxzLnByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGliL21vZHVsZXMvc2NoZWR1bGVyL3V0aWxzL2NhbGVuZGFyLXNjaGVkdWxlci11dGlscy5wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFDSCx3QkFBd0IsRUFFeEIsb0JBQW9CLEVBRXBCLGdCQUFnQixFQUVuQixNQUFNLDRCQUE0QixDQUFDOzs7QUFNcEMsTUFBTSxPQUFPLHNCQUFzQjtJQUMvQixZQUFvQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtJQUFJLENBQUM7SUFFakQsd0JBQXdCLENBQUMsSUFBa0M7UUFDdkQsT0FBTyx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCxvQkFBb0IsQ0FBQyxJQUE4QjtRQUMvQyxPQUFPLG9CQUFvQixDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELGdCQUFnQixDQUFDLElBQTBCO1FBQ3ZDLE9BQU8sZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNwRCxDQUFDOzttSEFiUSxzQkFBc0I7dUhBQXRCLHNCQUFzQjsyRkFBdEIsc0JBQXNCO2tCQURsQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1xyXG4gICAgZ2V0U2NoZWR1bGVyVmlld0hvdXJHcmlkLFxyXG4gICAgR2V0U2NoZWR1bGVyVmlld0hvdXJHcmlkQXJncyxcclxuICAgIGdldFNjaGVkdWxlclZpZXdEYXlzLFxyXG4gICAgR2V0U2NoZWR1bGVyVmlld0RheXNBcmdzLFxyXG4gICAgZ2V0U2NoZWR1bGVyVmlldyxcclxuICAgIEdldFNjaGVkdWxlclZpZXdBcmdzXHJcbn0gZnJvbSAnLi9jYWxlbmRhci1zY2hlZHVsZXItdXRpbHMnO1xyXG5pbXBvcnQgeyBXZWVrVmlld0hvdXIgfSBmcm9tICdjYWxlbmRhci11dGlscyc7XHJcbmltcG9ydCB7IFNjaGVkdWxlclZpZXcsIFNjaGVkdWxlclZpZXdEYXkgfSBmcm9tICcuLi9tb2RlbHMnO1xyXG5pbXBvcnQgeyBEYXRlQWRhcHRlciB9IGZyb20gJ2FuZ3VsYXItY2FsZW5kYXInO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ2FsZW5kYXJTY2hlZHVsZXJVdGlscyB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRhdGVBZGFwdGVyOiBEYXRlQWRhcHRlcikgeyB9XHJcblxyXG4gICAgZ2V0U2NoZWR1bGVyVmlld0hvdXJHcmlkKGFyZ3M6IEdldFNjaGVkdWxlclZpZXdIb3VyR3JpZEFyZ3MpOiBXZWVrVmlld0hvdXJbXSB7XHJcbiAgICAgICAgcmV0dXJuIGdldFNjaGVkdWxlclZpZXdIb3VyR3JpZCh0aGlzLmRhdGVBZGFwdGVyLCBhcmdzKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRTY2hlZHVsZXJWaWV3RGF5cyhhcmdzOiBHZXRTY2hlZHVsZXJWaWV3RGF5c0FyZ3MpOiBTY2hlZHVsZXJWaWV3RGF5W10ge1xyXG4gICAgICAgIHJldHVybiBnZXRTY2hlZHVsZXJWaWV3RGF5cyh0aGlzLmRhdGVBZGFwdGVyLCBhcmdzKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRTY2hlZHVsZXJWaWV3KGFyZ3M6IEdldFNjaGVkdWxlclZpZXdBcmdzKTogU2NoZWR1bGVyVmlldyB7XHJcbiAgICAgICAgcmV0dXJuIGdldFNjaGVkdWxlclZpZXcodGhpcy5kYXRlQWRhcHRlciwgYXJncyk7XHJcbiAgICB9XHJcbn1cclxuIl19